#!/usr/bin/env python# -*- coding: UTF-8 -*-  '''{"版权":"LDAE工作室","author":{"1":"集体",}"初创时间:"2017年3月",}'''#--------- 外部模块处理<<开始>> ---------##-----系统自带必备模块引用-----import sys # 操作系统模块1import os # 操作系统模块2import types # 数据类型import time # 时间模块import datetime # 日期模块import hashlib#-----系统外部需安装库模块引用-----#-----DIY自定义库模块引用-----from diy.inc_sys import * #自定义系统级功能模块 from diy.inc_conn import * #自定义数据库功能模块import config #系统配置参数import cgi # CGI模式 取得shell参数用from diy.inc_hash import hash_make # 基本自定义hash模块import diy.inc_crawler as inc_crawler #自定义数据分析处理功能模块#--------- 外部模块处理<<结束>> ---------##--------- 内部模块处理<<开始>> ---------## ---外部参变量处理# shell模式下参数处理form = cgi.FieldStorage() #处理提交的参数if form.getvalue('a'):    args_list = form["a"].valueelse:    args_list = []dic_args_cmd = args2dic(args_list)model_name = os.path.basename(__file__)skip_shell = "python " + model_name #命令行模式下递归调用命令seed_name = "" #声明种子为全局变量seed_hash = "" #声明种子哈希为全局变量if ("tid" in dic_args_cmd):    tid = int(dic_args_cmd["tid"])else:    tid = 0    if ("action" in dic_args_cmd):    action = dic_args_cmd["action"]else:    action = ""    if ("shell_if" in dic_args_cmd):    shell_if = int(dic_args_cmd["shell_if"])else:    shell_if = 1    if ("sleep" in dic_args_cmd):    sleep = int(dic_args_cmd["sleep"])else:    sleep = 0    if ("after" in dic_args_cmd):    after = dic_args_cmd["after"]else:    after = "00:00:00"    # ---全局变量处理def run_it(dic_p={}):    """    主功能模块过程调用区    主要功能为数据分析结果的处理    """    txt = ""        if ("action" in dic_p):        action = dic_p["action"]    else:        action = ""        if ("kw" in dic_p):        kw = dic_p["kw"]    else:        kw = ""        # 测试    if (action == "test"):        url_p = config.dic_config["url_api"] + "api"        values = {                 "action":"seg",                 "q":kw                    }        txt = inc_crawler.get_html_post(url_p)            return txt    #--------- 内部模块处理<<结束>> ---------##---------- 主过程<<开始>> -----------#def main():    #1 过程一    print ("")    #2 过程二    #3 过程三    if __name__ == '__main__':    main()    #---------- 主过程<<结束>> -----------#